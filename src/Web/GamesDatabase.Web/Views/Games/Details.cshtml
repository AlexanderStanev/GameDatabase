@using Microsoft.AspNetCore.Antiforgery

@inject IAntiforgery antiforgery

@model GamesDatabase.Web.Models.ViewModels.Games.DetailedGameViewModel

@{
    ViewData["Title"] = @Model.Title;
    var tokenSet = antiforgery.GetAndStoreTokens(Context);
}

<div class="container">

    <h1 class="my-4">
        @Model.Title
    </h1>

    @if (User.IsInRole(Common.GlobalConstants.AdministratorRoleName))
    {
        <a class="btn btn-dark" asp-area="Administration" asp-controller="Games" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>

        <a href="#" class="btn btn-danger" data-toggle="modal" data-target="#deleteModal">Delete</a>
        <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header"><h5 class="modal-title">Delete</h5></div>
                    <div class="modal-body">Are you sure you want to delete the game <strong>@Model.Title</strong>?</div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <form method="post" asp-area="Administration" asp-controller="Games" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger" onclick="submit()">Delete</form>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row py-4">

        <div class="col-md-6 text-center">
            <img class="img-fluid" src="@Model.CoverImage" alt="Cover Image">
        </div>

        <div class="col-md-6">
            <h5 class="my-2">Rating: <span id="averageRating">0</span> / 5</h5>
            <h5 class="my-3">Description</h5>
            <p>@Model.Description</p>
            <h5 class="my-3">Genres</h5>
            <ul>
                @foreach (var genre in Model.Genres)
                {
                    <li>
                        <a class="text-dark" asp-area="" asp-controller="Search" asp-action="ByGenreId" asp-route-id="@genre.Id" title="@genre.Description">@genre.Name</a>
                    </li>
                }
            </ul>
        </div>

    </div>

    @if (Model.Images.Length > 0)
    {
        <hr>
        <h3 class="my-3">More Pictures</h3>
        <partial name="_CarouselPartial.cshtml" model="@Model.Images" />
    }

    <hr>

    <h3 class="my-3">Reviews</h3>
    <div class="container text-break">
        <div class="">
            <div class="message-wrap">

                <div class="send-wrap">
                    <span class="star-fill" data-vote="1"><i class="fas fa-star"></i></span>
                    <span class="star-fill" data-vote="2"><i class="fas fa-star"></i></span>
                    <span class="star-fill" data-vote="3"><i class="fas fa-star"></i></span>
                    <span class="star-fill" data-vote="4"><i class="fas fa-star"></i></span>
                    <span class="star-fill" data-vote="5"><i class="fas fa-star"></i></span>
                </div>

                <div class="send-wrap py-2">
                    <textarea class="form-control send-message" id="reviewContent" rows="3" placeholder="What do you think about the game?"></textarea>
                </div>

                <div class="btn-panel">
                    <a onclick="submitReview()" id="submitButton" class=" btn send-message-btn pull-right" role="button">Submit</a>
                </div>

                <hr>

                <div class="msg-wrap py-2" id="displayReviews">

                </div>

            </div>

        </div>
    </div>

</div>

@section Scripts {
    <script>
        var gameId = @Model.Id;
        var rating = 0;
        var page = 1;
        var averageRating = 0;

        retrieveReviews();

        $("span[data-vote]").each(function () {
            $(this).click(function () {
                rating = $(this).attr("data-vote");
                setRating(rating);
            });
        })

        function setRating(rating) {
            $("span[data-vote]").each(function () {
                if ($(this).attr("data-vote") <= rating) {
                    this.style.color = "orange";
                } else {
                    this.style.removeProperty("color");
                }
            });
        }

        function submitReview() {
            var content = $("#reviewContent").val();
            var data = { gameId, content, rating };
                $.ajax({
                    type: "POST",
                    url: "/api/Reviews",
                    data: JSON.stringify(data),
                    headers: {
                        '@tokenSet.HeaderName' : '@tokenSet.RequestToken'
                    },
                    success: function (data) {
                        retrieveReviews();

                    },
                    error: function (data) {
                        alert("Post submitReview failed");
                    },
                    contentType: 'application/json',
                });
        }

        function retrieveReviews() {
            $.ajax({
                type: "GET",
                url: "/api/Reviews",
                data: {
                    page, gameId
                },
                success: function (data) {
                    reviews = data.reviews;
                    averageRating = data.averageRating;
                    currentUserReview = data.currentUserReview;

                    displayReviews(reviews);
                    updateCurrentData(averageRating, currentUserReview);
                },
                error: function (data) {
                    alert("Get retrieveReviews failed");
                },
            });
        }

        function displayReviews(reviews) {
            $("#displayReviews").empty();
            reviews.forEach(review =>
                $("#displayReviews").append(`
                    <div class="media msg send-message py-2 border bg-light">
                        <div class="media-body px-4">
                            <h5 class="media-heading">${review.authorUserName}</h5>
                            <div class="pull-right">Rated ${review.rating} / 5 at <span class="pull-right time">${review.createdOn}</span></div>
                            <small class="flex-md-wrap">${review.content}</small>
                        </div>
                    </div>
                `)
            );
        }

        function updateCurrentData(averageRating, currentUserReview) {
            if (currentUserReview != null) {
                $("#reviewContent").text(currentUserReview.content);
                $("#submitButton").text("Update");
                setRating(currentUserReview.rating);
            }

            $("#averageRating").text(averageRating.toFixed(1));
        }

    </script>
}